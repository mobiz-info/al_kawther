# Generated by Django 5.2.7 on 2025-10-24 12:03

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_initial'),
        ('coupon_management', '0001_initial'),
        ('master', '0001_initial'),
        ('order', '0001_initial'),
        ('product', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpenseHead',
            fields=[
                ('expensehead_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SalesmanCustomerRequestType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default=0, max_length=50)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='AuditBase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=30)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='driver_audits', to=settings.AUTH_USER_MODEL)),
                ('helper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='helper_audits', to=settings.AUTH_USER_MODEL)),
                ('marketing_executieve', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='marketing_audits', to=settings.AUTH_USER_MODEL)),
                ('route', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='master.routemaster')),
                ('salesman', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salesman_audits', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AuditDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outstanding_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('bottle_outstanding', models.IntegerField(default=0)),
                ('outstanding_coupon', models.IntegerField(default=0)),
                ('audit_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_details', to='van_management.auditbase')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.customers')),
            ],
        ),
        migrations.CreateModel(
            name='BottleAllocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=30)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('fivegallon_count', models.PositiveIntegerField(default=0)),
                ('reason', models.CharField(max_length=300)),
                ('route', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='master.routemaster')),
            ],
        ),
        migrations.CreateModel(
            name='DamageControl',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=30)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('damage', models.PositiveIntegerField(default=0)),
                ('leak', models.PositiveIntegerField(default=0)),
                ('service_bottle', models.PositiveIntegerField(default=0)),
                ('route', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='master.routemaster')),
            ],
            options={
                'ordering': ['-created_date', 'route'],
            },
        ),
        migrations.CreateModel(
            name='EmptyCanStock',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.produtitemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='OffloadRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, null=True)),
                ('status', models.BooleanField(default=False)),
                ('created_by', models.CharField(blank=True, max_length=20)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('salesman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created_date',),
            },
        ),
        migrations.CreateModel(
            name='OffloadRequestCoupon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('stock_type', models.CharField(choices=[('opening_stock', 'Opening Stock'), ('change', 'Change'), ('return', 'Return'), ('closing', 'Closing'), ('damage', 'Damage'), ('emptycan', 'Empty Can')], max_length=100)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coupon_management.newcoupon')),
                ('offload_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='van_management.offloadrequest')),
            ],
        ),
        migrations.CreateModel(
            name='OffloadRequestItems',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('offloaded_quantity', models.PositiveIntegerField(default=0)),
                ('stock_type', models.CharField(max_length=100)),
                ('offload_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='van_management.offloadrequest')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.produtitemmaster')),
            ],
            options={
                'ordering': ('offload_request__created_date',),
            },
        ),
        migrations.CreateModel(
            name='OffloadRequestReturnStocks',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('other_reason', models.CharField(max_length=300)),
                ('scrap_count', models.PositiveIntegerField(default=0)),
                ('washing_count', models.PositiveIntegerField(default=0)),
                ('other_quantity', models.PositiveIntegerField(default=0)),
                ('offload_request_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='van_management.offloadrequestitems')),
            ],
        ),
        migrations.CreateModel(
            name='SalesmanCustomerRequests',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('new', 'New'), ('approved', 'Approved'), ('cancel', 'Cancel')], default='new', max_length=50)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.customers')),
                ('salesman', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('request_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='van_management.salesmancustomerrequesttype')),
            ],
            options={
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='SalesmanCustomerRequestCancelReason',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reason', models.CharField(default=0, max_length=50)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('salesman_customer_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='van_management.salesmancustomerrequests')),
            ],
            options={
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='SalesmanCustomerRequestStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('new', 'New'), ('approved', 'Approved'), ('cancel', 'Cancel')], default='new', max_length=50)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('salesman_customer_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='van_management.salesmancustomerrequests')),
            ],
            options={
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='SalesmanRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('request', models.TextField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salesman_requests_created', to=settings.AUTH_USER_MODEL)),
                ('salesman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salesman_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('salesman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StockMovementProducts',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.produtitemmaster')),
                ('stock_movement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='van_management.stockmovement')),
            ],
        ),
        migrations.CreateModel(
            name='Van',
            fields=[
                ('van_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=20)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('van_make', models.CharField(max_length=50)),
                ('plate', models.CharField(max_length=50)),
                ('renewal_date', models.DateTimeField(blank=True, null=True)),
                ('insurance_expiry_date', models.DateTimeField(blank=True, null=True)),
                ('capacity', models.IntegerField(default=0)),
                ('bottle_count', models.PositiveIntegerField(default=0)),
                ('branch_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='van_branch', to='master.branchmaster')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='driver_van', to=settings.AUTH_USER_MODEL)),
                ('salesman', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='salesman_van', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('van_make',),
            },
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='from_van',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_van', to='van_management.van'),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='to_van',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_van', to='van_management.van'),
        ),
        migrations.CreateModel(
            name='OffloadReturnStocks',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=30)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('scrap_count', models.PositiveIntegerField(default=0)),
                ('washing_count', models.PositiveIntegerField(default=0)),
                ('other_quantity', models.PositiveIntegerField(default=0)),
                ('other_reason', models.CharField(max_length=300)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.produtitemmaster')),
                ('salesman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('van', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='van_management.van')),
            ],
        ),
        migrations.AddField(
            model_name='offloadrequest',
            name='van',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='van_management.van'),
        ),
        migrations.CreateModel(
            name='OffloadDamageStocks',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=30)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('scrap_count', models.PositiveIntegerField(default=0)),
                ('washing_count', models.PositiveIntegerField(default=0)),
                ('other_quantity', models.PositiveIntegerField(default=0)),
                ('other_reason', models.CharField(max_length=300)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.produtitemmaster')),
                ('salesman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('van', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='van_management.van')),
            ],
        ),
        migrations.CreateModel(
            name='OffloadCoupon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=30, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('stock_type', models.CharField(choices=[('opening_stock', 'Opening Stock'), ('change', 'Change'), ('return', 'Return'), ('closing', 'Closing'), ('damage', 'Damage'), ('emptycan', 'Empty Can')], max_length=100)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coupon_management.newcoupon')),
                ('salesman', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('van', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='van_management.van')),
            ],
        ),
        migrations.CreateModel(
            name='Offload',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=30)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('stock_type', models.CharField(choices=[('opening_stock', 'Opening Stock'), ('change', 'Change'), ('return', 'Return'), ('closing', 'Closing'), ('damage', 'Damage'), ('emptycan', 'Empty Can')], max_length=100)),
                ('offloaded_date', models.DateField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.produtitemmaster')),
                ('salesman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('van', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='van_management.van')),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('expense_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('remarks', models.TextField(blank=True)),
                ('expense_date', models.DateField()),
                ('date_created', models.DateField(auto_now_add=True)),
                ('route', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='master.routemaster')),
                ('expence_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='van_management.expensehead')),
                ('van', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='van_management.van')),
            ],
        ),
        migrations.CreateModel(
            name='ExcessBottleCount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=30)),
                ('bottle_count', models.PositiveIntegerField()),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.routemaster')),
                ('van', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='van_management.van')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProductReturn',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=30)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('note', models.TextField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.customers')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.produtitemmaster')),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.change_reason')),
                ('van', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='van_management.van')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProductReplace',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=30)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('note', models.TextField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.customers')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.produtitemmaster')),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.change_reason')),
                ('van', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='van_management.van')),
            ],
        ),
        migrations.CreateModel(
            name='BottleCount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('opening_stock', models.PositiveIntegerField(default=0)),
                ('custody_issue', models.PositiveIntegerField(default=0)),
                ('custody_return', models.PositiveIntegerField(default=0)),
                ('qty_added', models.PositiveIntegerField(default=0)),
                ('qty_deducted', models.PositiveIntegerField(default=0)),
                ('closing_stock', models.PositiveIntegerField(default=0)),
                ('comment', models.TextField()),
                ('van', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='van_management.van')),
            ],
            options={
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='Van_License',
            fields=[
                ('van_license_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=20)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('license_no', models.CharField(blank=True, max_length=50, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('emirate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='license_emirate', to='master.emiratemaster')),
                ('van', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='van_license', to='van_management.van')),
            ],
            options={
                'ordering': ('van',),
            },
        ),
        migrations.CreateModel(
            name='Van_Routes',
            fields=[
                ('van_route_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=20)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('routes', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='van_routes', to='master.routemaster')),
                ('van', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='van_master', to='van_management.van')),
            ],
            options={
                'ordering': ('van',),
            },
        ),
        migrations.CreateModel(
            name='VanCouponStock',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateField()),
                ('opening_count', models.PositiveIntegerField(default=0)),
                ('closing_count', models.PositiveIntegerField(default=0)),
                ('change_count', models.PositiveIntegerField(default=0)),
                ('damage_count', models.PositiveIntegerField(default=0)),
                ('return_count', models.PositiveIntegerField(default=0)),
                ('requested_count', models.PositiveIntegerField(default=0)),
                ('pending_count', models.PositiveIntegerField(default=0)),
                ('sold_count', models.PositiveIntegerField(default=0)),
                ('used_leaf_count', models.PositiveIntegerField(default=0)),
                ('stock', models.PositiveIntegerField(default=0)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coupon_management.newcoupon')),
                ('van', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='van_management.van')),
            ],
        ),
        migrations.CreateModel(
            name='VanProductStock',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateField()),
                ('opening_count', models.PositiveIntegerField(default=0)),
                ('closing_count', models.PositiveIntegerField(default=0)),
                ('change_count', models.PositiveIntegerField(default=0)),
                ('damage_count', models.PositiveIntegerField(default=0)),
                ('empty_can_count', models.PositiveIntegerField(default=0)),
                ('return_count', models.PositiveIntegerField(default=0)),
                ('requested_count', models.PositiveIntegerField(default=0)),
                ('pending_count', models.PositiveIntegerField(default=0)),
                ('sold_count', models.PositiveIntegerField(default=0)),
                ('stock', models.PositiveIntegerField(default=0)),
                ('foc', models.PositiveIntegerField(default=0)),
                ('excess_bottle', models.PositiveIntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.produtitemmaster')),
                ('van', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='van_management.van')),
            ],
        ),
        migrations.CreateModel(
            name='VanSaleDamage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('created_by', models.CharField(max_length=20)),
                ('modified_by', models.CharField(max_length=20)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.produtitemmaster')),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.productiondamagereason')),
                ('van', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='van_management.van')),
            ],
            options={
                'ordering': ('created_date',),
            },
        ),
        migrations.CreateModel(
            name='VanStock',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=30)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=20, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('stock_type', models.CharField(choices=[('opening_stock', 'Opening Stock'), ('change', 'Change'), ('return', 'Return'), ('closing', 'Closing'), ('damage', 'Damage'), ('emptycan', 'Empty Can')], max_length=100)),
                ('van', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='van_management.van')),
            ],
        ),
        migrations.CreateModel(
            name='VanProductItems',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('count', models.PositiveIntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.produtitemmaster')),
                ('van_stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='van_management.vanstock')),
            ],
        ),
        migrations.CreateModel(
            name='VanCouponItems',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('book_no', models.CharField(max_length=100)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coupon_management.newcoupon')),
                ('coupon_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coupon_management.coupontype')),
                ('van_stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='van_management.vanstock')),
            ],
        ),
    ]
